{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NoneType = void 0;\nconst persistent_merkle_tree_1 = require(\"@chainsafe/persistent-merkle-tree\");\nconst basic_1 = require(\"./basic\");\n/* eslint-disable @typescript-eslint/member-ordering */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nclass NoneType extends basic_1.BasicType {\n  constructor() {\n    super(...arguments);\n    this.typeName = \"none\";\n    this.byteLength = 0;\n    this.itemsPerChunk = 32;\n    this.fixedSize = 0;\n    this.minSize = 0;\n    this.maxSize = 0;\n  }\n  defaultValue() {\n    return null;\n  }\n  // bytes serdes\n  value_serializeToBytes(output, offset, value) {\n    return offset;\n  }\n  value_deserializeFromBytes(data, start) {\n    return null;\n  }\n  tree_serializeToBytes(output, offset, node) {\n    return offset;\n  }\n  tree_deserializeFromBytes(data, start, end) {\n    return persistent_merkle_tree_1.zeroNode(0);\n  }\n  // Fast tree opts\n  tree_getFromNode(leafNode) {\n    return null;\n  }\n  tree_setToNode(leafNode, value) {\n    return;\n  }\n  tree_getFromPackedNode(leafNode, index) {\n    return null;\n  }\n  tree_setToPackedNode(leafNode, index, value) {\n    return;\n  }\n  // JSON\n  fromJson(json) {\n    if (json !== null) {\n      throw Error(\"JSON invalid type none must be null\");\n    }\n    return null;\n  }\n  toJson(value) {\n    return null;\n  }\n}\nexports.NoneType = NoneType;","map":{"version":3,"names":["persistent_merkle_tree_1","require","basic_1","NoneType","BasicType","constructor","typeName","byteLength","itemsPerChunk","fixedSize","minSize","maxSize","defaultValue","value_serializeToBytes","output","offset","value","value_deserializeFromBytes","data","start","tree_serializeToBytes","node","tree_deserializeFromBytes","end","zeroNode","tree_getFromNode","leafNode","tree_setToNode","tree_getFromPackedNode","index","tree_setToPackedNode","fromJson","json","Error","toJson","exports"],"sources":["../../src/type/none.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA,MAAAA,wBAAA,GAAAC,OAAA;AAEA,MAAAC,OAAA,GAAAD,OAAA;AAEA;AACA;AAEA,MAAaE,QAAS,SAAQD,OAAA,CAAAE,SAAe;EAA7CC,YAAA;;IACW,KAAAC,QAAQ,GAAG,MAAM;IACjB,KAAAC,UAAU,GAAG,CAAC;IACd,KAAAC,aAAa,GAAG,EAAE;IAClB,KAAAC,SAAS,GAAG,CAAC;IACb,KAAAC,OAAO,GAAG,CAAC;IACX,KAAAC,OAAO,GAAG,CAAC;EAsDtB;EApDEC,YAAYA,CAAA;IACV,OAAO,IAAI;EACb;EAEA;EAEAC,sBAAsBA,CAACC,MAAiB,EAAEC,MAAc,EAAEC,KAAW;IACnE,OAAOD,MAAM;EACf;EAEAE,0BAA0BA,CAACC,IAAe,EAAEC,KAAa;IACvD,OAAO,IAAI;EACb;EAEAC,qBAAqBA,CAACN,MAAiB,EAAEC,MAAc,EAAEM,IAAU;IACjE,OAAON,MAAM;EACf;EAEAO,yBAAyBA,CAACJ,IAAe,EAAEC,KAAa,EAAEI,GAAW;IACnE,OAAOvB,wBAAA,CAAAwB,QAAQ,CAAC,CAAC,CAAC;EACpB;EAEA;EAEAC,gBAAgBA,CAACC,QAAkB;IACjC,OAAO,IAAI;EACb;EAEAC,cAAcA,CAACD,QAAkB,EAAEV,KAAW;IAC5C;EACF;EAEAY,sBAAsBA,CAACF,QAAkB,EAAEG,KAAa;IACtD,OAAO,IAAI;EACb;EAEAC,oBAAoBA,CAACJ,QAAkB,EAAEG,KAAa,EAAEb,KAAW;IACjE;EACF;EAEA;EAEAe,QAAQA,CAACC,IAAa;IACpB,IAAIA,IAAI,KAAK,IAAI,EAAE;MACjB,MAAMC,KAAK,CAAC,qCAAqC,CAAC;;IAEpD,OAAO,IAAI;EACb;EAEAC,MAAMA,CAAClB,KAAW;IAChB,OAAO,IAAI;EACb;;AA3DFmB,OAAA,CAAAhC,QAAA,GAAAA,QAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}