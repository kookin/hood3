{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hash64 = exports.byteArrayEquals = exports.toHexString = exports.fromHexString = exports.getUint8ByteToBitBooleanArray = exports.BitArray = exports.TreeViewDU = exports.TreeView = exports.isCompositeType = exports.CompositeType = exports.isBasicType = exports.BasicType = exports.Type = exports.ByteArrayType = exports.BitArrayType = exports.ArrayType = exports.VectorCompositeType = exports.VectorBasicType = exports.UnionType = exports.UintNumberType = exports.UintBigintType = exports.NoneType = exports.ListCompositeType = exports.ListBasicType = exports.ContainerNodeStructType = exports.ContainerType = exports.ByteVectorType = exports.ByteListType = exports.BooleanType = exports.BitVectorType = exports.BitListType = void 0;\n// Types\nvar bitList_1 = require(\"./type/bitList\");\nObject.defineProperty(exports, \"BitListType\", {\n  enumerable: true,\n  get: function () {\n    return bitList_1.BitListType;\n  }\n});\nvar bitVector_1 = require(\"./type/bitVector\");\nObject.defineProperty(exports, \"BitVectorType\", {\n  enumerable: true,\n  get: function () {\n    return bitVector_1.BitVectorType;\n  }\n});\nvar boolean_1 = require(\"./type/boolean\");\nObject.defineProperty(exports, \"BooleanType\", {\n  enumerable: true,\n  get: function () {\n    return boolean_1.BooleanType;\n  }\n});\nvar byteList_1 = require(\"./type/byteList\");\nObject.defineProperty(exports, \"ByteListType\", {\n  enumerable: true,\n  get: function () {\n    return byteList_1.ByteListType;\n  }\n});\nvar byteVector_1 = require(\"./type/byteVector\");\nObject.defineProperty(exports, \"ByteVectorType\", {\n  enumerable: true,\n  get: function () {\n    return byteVector_1.ByteVectorType;\n  }\n});\nvar container_1 = require(\"./type/container\");\nObject.defineProperty(exports, \"ContainerType\", {\n  enumerable: true,\n  get: function () {\n    return container_1.ContainerType;\n  }\n});\nvar containerNodeStruct_1 = require(\"./type/containerNodeStruct\");\nObject.defineProperty(exports, \"ContainerNodeStructType\", {\n  enumerable: true,\n  get: function () {\n    return containerNodeStruct_1.ContainerNodeStructType;\n  }\n});\nvar listBasic_1 = require(\"./type/listBasic\");\nObject.defineProperty(exports, \"ListBasicType\", {\n  enumerable: true,\n  get: function () {\n    return listBasic_1.ListBasicType;\n  }\n});\nvar listComposite_1 = require(\"./type/listComposite\");\nObject.defineProperty(exports, \"ListCompositeType\", {\n  enumerable: true,\n  get: function () {\n    return listComposite_1.ListCompositeType;\n  }\n});\nvar none_1 = require(\"./type/none\");\nObject.defineProperty(exports, \"NoneType\", {\n  enumerable: true,\n  get: function () {\n    return none_1.NoneType;\n  }\n});\nvar uint_1 = require(\"./type/uint\");\nObject.defineProperty(exports, \"UintBigintType\", {\n  enumerable: true,\n  get: function () {\n    return uint_1.UintBigintType;\n  }\n});\nObject.defineProperty(exports, \"UintNumberType\", {\n  enumerable: true,\n  get: function () {\n    return uint_1.UintNumberType;\n  }\n});\nvar union_1 = require(\"./type/union\");\nObject.defineProperty(exports, \"UnionType\", {\n  enumerable: true,\n  get: function () {\n    return union_1.UnionType;\n  }\n});\nvar vectorBasic_1 = require(\"./type/vectorBasic\");\nObject.defineProperty(exports, \"VectorBasicType\", {\n  enumerable: true,\n  get: function () {\n    return vectorBasic_1.VectorBasicType;\n  }\n});\nvar vectorComposite_1 = require(\"./type/vectorComposite\");\nObject.defineProperty(exports, \"VectorCompositeType\", {\n  enumerable: true,\n  get: function () {\n    return vectorComposite_1.VectorCompositeType;\n  }\n});\n// Base types\nvar array_1 = require(\"./type/array\");\nObject.defineProperty(exports, \"ArrayType\", {\n  enumerable: true,\n  get: function () {\n    return array_1.ArrayType;\n  }\n});\nvar bitArray_1 = require(\"./type/bitArray\");\nObject.defineProperty(exports, \"BitArrayType\", {\n  enumerable: true,\n  get: function () {\n    return bitArray_1.BitArrayType;\n  }\n});\nvar byteArray_1 = require(\"./type/byteArray\");\nObject.defineProperty(exports, \"ByteArrayType\", {\n  enumerable: true,\n  get: function () {\n    return byteArray_1.ByteArrayType;\n  }\n});\n// Base type clases\nvar abstract_1 = require(\"./type/abstract\");\nObject.defineProperty(exports, \"Type\", {\n  enumerable: true,\n  get: function () {\n    return abstract_1.Type;\n  }\n});\nvar basic_1 = require(\"./type/basic\");\nObject.defineProperty(exports, \"BasicType\", {\n  enumerable: true,\n  get: function () {\n    return basic_1.BasicType;\n  }\n});\nObject.defineProperty(exports, \"isBasicType\", {\n  enumerable: true,\n  get: function () {\n    return basic_1.isBasicType;\n  }\n});\nvar composite_1 = require(\"./type/composite\");\nObject.defineProperty(exports, \"CompositeType\", {\n  enumerable: true,\n  get: function () {\n    return composite_1.CompositeType;\n  }\n});\nObject.defineProperty(exports, \"isCompositeType\", {\n  enumerable: true,\n  get: function () {\n    return composite_1.isCompositeType;\n  }\n});\nvar abstract_2 = require(\"./view/abstract\");\nObject.defineProperty(exports, \"TreeView\", {\n  enumerable: true,\n  get: function () {\n    return abstract_2.TreeView;\n  }\n});\nvar abstract_3 = require(\"./viewDU/abstract\");\nObject.defineProperty(exports, \"TreeViewDU\", {\n  enumerable: true,\n  get: function () {\n    return abstract_3.TreeViewDU;\n  }\n});\n// Values\nvar bitArray_2 = require(\"./value/bitArray\");\nObject.defineProperty(exports, \"BitArray\", {\n  enumerable: true,\n  get: function () {\n    return bitArray_2.BitArray;\n  }\n});\nObject.defineProperty(exports, \"getUint8ByteToBitBooleanArray\", {\n  enumerable: true,\n  get: function () {\n    return bitArray_2.getUint8ByteToBitBooleanArray;\n  }\n});\n// Utils\nvar byteArray_2 = require(\"./util/byteArray\");\nObject.defineProperty(exports, \"fromHexString\", {\n  enumerable: true,\n  get: function () {\n    return byteArray_2.fromHexString;\n  }\n});\nObject.defineProperty(exports, \"toHexString\", {\n  enumerable: true,\n  get: function () {\n    return byteArray_2.toHexString;\n  }\n});\nObject.defineProperty(exports, \"byteArrayEquals\", {\n  enumerable: true,\n  get: function () {\n    return byteArray_2.byteArrayEquals;\n  }\n});\nvar merkleize_1 = require(\"./util/merkleize\");\nObject.defineProperty(exports, \"hash64\", {\n  enumerable: true,\n  get: function () {\n    return merkleize_1.hash64;\n  }\n});","map":{"version":3,"names":["bitList_1","require","Object","defineProperty","exports","enumerable","get","BitListType","bitVector_1","BitVectorType","boolean_1","BooleanType","byteList_1","ByteListType","byteVector_1","ByteVectorType","container_1","ContainerType","containerNodeStruct_1","ContainerNodeStructType","listBasic_1","ListBasicType","listComposite_1","ListCompositeType","none_1","NoneType","uint_1","UintBigintType","UintNumberType","union_1","UnionType","vectorBasic_1","VectorBasicType","vectorComposite_1","VectorCompositeType","array_1","ArrayType","bitArray_1","BitArrayType","byteArray_1","ByteArrayType","abstract_1","Type","basic_1","BasicType","isBasicType","composite_1","CompositeType","isCompositeType","abstract_2","TreeView","abstract_3","TreeViewDU","bitArray_2","BitArray","getUint8ByteToBitBooleanArray","byteArray_2","fromHexString","toHexString","byteArrayEquals","merkleize_1","hash64"],"sources":["../src/index.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA;AACA,IAAAA,SAAA,GAAAC,OAAA;AAAQC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAN,SAAA,CAAAO,WAAW;EAAA;AAAA;AACnB,IAAAC,WAAA,GAAAP,OAAA;AAAQC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAE,WAAA,CAAAC,aAAa;EAAA;AAAA;AACrB,IAAAC,SAAA,GAAAT,OAAA;AAAQC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAI,SAAA,CAAAC,WAAW;EAAA;AAAA;AACnB,IAAAC,UAAA,GAAAX,OAAA;AAAQC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAM,UAAA,CAAAC,YAAY;EAAA;AAAA;AACpB,IAAAC,YAAA,GAAAb,OAAA;AAAQC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAQ,YAAA,CAAAC,cAAc;EAAA;AAAA;AACtB,IAAAC,WAAA,GAAAf,OAAA;AAAQC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAU,WAAA,CAAAC,aAAa;EAAA;AAAA;AACrB,IAAAC,qBAAA,GAAAjB,OAAA;AAAQC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAY,qBAAA,CAAAC,uBAAuB;EAAA;AAAA;AAC/B,IAAAC,WAAA,GAAAnB,OAAA;AAAQC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAc,WAAA,CAAAC,aAAa;EAAA;AAAA;AACrB,IAAAC,eAAA,GAAArB,OAAA;AAAQC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAgB,eAAA,CAAAC,iBAAiB;EAAA;AAAA;AACzB,IAAAC,MAAA,GAAAvB,OAAA;AAAQC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAkB,MAAA,CAAAC,QAAQ;EAAA;AAAA;AAChB,IAAAC,MAAA,GAAAzB,OAAA;AAAQC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAoB,MAAA,CAAAC,cAAc;EAAA;AAAA;AAAEzB,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAoB,MAAA,CAAAE,cAAc;EAAA;AAAA;AACtC,IAAAC,OAAA,GAAA5B,OAAA;AAAQC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAuB,OAAA,CAAAC,SAAS;EAAA;AAAA;AACjB,IAAAC,aAAA,GAAA9B,OAAA;AAAQC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAyB,aAAA,CAAAC,eAAe;EAAA;AAAA;AACvB,IAAAC,iBAAA,GAAAhC,OAAA;AAAQC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAA2B,iBAAA,CAAAC,mBAAmB;EAAA;AAAA;AAE3B;AACA,IAAAC,OAAA,GAAAlC,OAAA;AAAQC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAA6B,OAAA,CAAAC,SAAS;EAAA;AAAA;AACjB,IAAAC,UAAA,GAAApC,OAAA;AAAQC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAA+B,UAAA,CAAAC,YAAY;EAAA;AAAA;AACpB,IAAAC,WAAA,GAAAtC,OAAA;AAAQC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAiC,WAAA,CAAAC,aAAa;EAAA;AAAA;AAErB;AACA,IAAAC,UAAA,GAAAxC,OAAA;AAAQC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAmC,UAAA,CAAAC,IAAI;EAAA;AAAA;AACZ,IAAAC,OAAA,GAAA1C,OAAA;AAAQC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAqC,OAAA,CAAAC,SAAS;EAAA;AAAA;AAAE1C,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAqC,OAAA,CAAAE,WAAW;EAAA;AAAA;AAC9B,IAAAC,WAAA,GAAA7C,OAAA;AAAQC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAwC,WAAA,CAAAC,aAAa;EAAA;AAAA;AAAoD7C,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAwC,WAAA,CAAAE,eAAe;EAAA;AAAA;AACxF,IAAAC,UAAA,GAAAhD,OAAA;AAAQC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAA2C,UAAA,CAAAC,QAAQ;EAAA;AAAA;AAChB,IAAAC,UAAA,GAAAlD,OAAA;AAAQC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAA6C,UAAA,CAAAC,UAAU;EAAA;AAAA;AAElB;AACA,IAAAC,UAAA,GAAApD,OAAA;AAAQC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAA+C,UAAA,CAAAC,QAAQ;EAAA;AAAA;AAAEpD,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAA+C,UAAA,CAAAE,6BAA6B;EAAA;AAAA;AAE/C;AACA,IAAAC,WAAA,GAAAvD,OAAA;AAAQC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAkD,WAAA,CAAAC,aAAa;EAAA;AAAA;AAAEvD,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAkD,WAAA,CAAAE,WAAW;EAAA;AAAA;AAAExD,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAkD,WAAA,CAAAG,eAAe;EAAA;AAAA;AAEnD,IAAAC,WAAA,GAAA3D,OAAA;AAAQC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAAAsD,WAAA,CAAAC,MAAM;EAAA;AAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}