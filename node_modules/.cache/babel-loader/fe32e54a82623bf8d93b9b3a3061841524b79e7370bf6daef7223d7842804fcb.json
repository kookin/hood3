{"ast":null,"code":"/** Name of the feature. */\nexport const SolanaSignMessage = 'solana:signMessage';","map":{"version":3,"names":["SolanaSignMessage"],"sources":["/hood3/node_modules/@solana/wallet-standard-features/src/signMessage.ts"],"sourcesContent":["import type { WalletAccount } from '@wallet-standard/base';\n\n/** Name of the feature. */\nexport const SolanaSignMessage = 'solana:signMessage';\n\n/** TODO: docs */\nexport type SolanaSignMessageFeature = {\n    /** Name of the feature. */\n    readonly [SolanaSignMessage]: {\n        /** Version of the feature API. */\n        readonly version: SolanaSignMessageVersion;\n\n        /** Sign messages (arbitrary bytes) using the account's secret key. */\n        readonly signMessage: SolanaSignMessageMethod;\n    };\n};\n\n/** TODO: docs */\nexport type SolanaSignMessageVersion = '1.0.0';\n\n/** TODO: docs */\nexport type SolanaSignMessageMethod = (\n    ...inputs: readonly SolanaSignMessageInput[]\n) => Promise<readonly SolanaSignMessageOutput[]>;\n\n/** Input for signing a message. */\nexport interface SolanaSignMessageInput {\n    /** Account to use. */\n    readonly account: WalletAccount;\n\n    /** Message to sign, as raw bytes. */\n    readonly message: Uint8Array;\n}\n\n/** Output of signing a message. */\nexport interface SolanaSignMessageOutput {\n    /** TODO: docs */\n    readonly signedMessage: Uint8Array;\n\n    /** TODO: docs */\n    readonly signature: Uint8Array;\n}\n"],"mappings":"AAEA;AACA,OAAO,MAAMA,iBAAiB,GAAG,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}